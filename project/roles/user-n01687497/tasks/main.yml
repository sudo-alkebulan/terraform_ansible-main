---
# tasks file for roles/user-n01687497

- name: Create cloudadmins group
  ansible.builtin.group:
    name: cloudadmins

- name: Create users and add them to groups
  ansible.builtin.user:
    name: "{{ item }}"
    groups: cloudadmins,wheel
    append: true
  loop:
  - user100
  - user200
  - user300

- name: Ensure the .ssh directory exists for each user
  ansible.builtin.file:
    path: "/home/{{ item }}/.ssh"
    state: directory
    owner: "{{ item }}"
    group: "{{ item }}"
    mode: '0700'
  loop:
  - user100
  - user200
  - user300
  become: true

- name: Generate SSH keys for users without a passphrase
  ansible.builtin.openssh_keypair:
    path: "/home/{{ item }}/.ssh/id_rsa"
    type: rsa
    state: present
  loop:
  - user100
  - user200
  - user300
  become: true
  become_user: "{{ item }}"

- name: Set correct permissions on SSH private keys
  ansible.builtin.file:
    path: "/home/{{ item }}/.ssh/id_rsa"
    owner: "{{ item }}"
    group: "{{ item }}"
    mode: '0600'
  loop:
  - user100
  - user200
  - user300
  become: true

- name: Ensure local directory for keys exists
  ansible.builtin.file:
    path: ./keys
    state: directory
    mode: '0700'
  delegate_to: localhost
  become: false

- name: Ensure private key placeholder exists in local directory
  ansible.builtin.file:
    path: ./keys/user100_private_key
    state: touch
    mode: '0600'
  delegate_to: localhost
  become: false

- name: Ensure user-specific directories exist in local keys directory
  ansible.builtin.file:
    path: "./keys/{{ item }}"
    state: directory
    mode: '0700'
  loop:
  - user100
  - user200
  - user300
  delegate_to: localhost
  become: false

- name: Slurp user public keys
  slurp:
    path: "/home/{{ item }}/.ssh/id_rsa.pub"
  loop:
  - user100
  - user200
  - user300
  register: user_public_keys
  become: true

- name: Add user public keys to authorized keys
  ansible.builtin.authorized_key:
    user: "{{ item.item }}"
    key: "{{ item.content | b64decode }}"
    state: present
  loop: "{{ user_public_keys.results }}"
  become: true

- name: Download private keys for users to local machine
  ansible.builtin.fetch:
    src: "/home/{{ item }}/.ssh/id_rsa"
    dest: "./keys/{{ item }}/{{ item }}_private_key_{{ inventory_hostname }}"
    flat: true
  loop:
  - user100
  - user200
  - user300
  become: true
  become_user: "{{ item }}"
